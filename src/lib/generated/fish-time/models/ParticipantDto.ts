/* tslint:disable */
/* eslint-disable */
/**
 * OAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
    UserDtoToJSONTyped,
} from './UserDto';

/**
 * 
 * @export
 * @interface ParticipantDto
 */
export interface ParticipantDto {
    /**
     * 
     * @type {number}
     * @memberof ParticipantDto
     */
    id?: number;
    /**
     * 
     * @type {UserDto}
     * @memberof ParticipantDto
     */
    user?: UserDto;
    /**
     * 
     * @type {number}
     * @memberof ParticipantDto
     */
    meetingId?: number;
    /**
     * 
     * @type {string}
     * @memberof ParticipantDto
     */
    status?: string;
    /**
     * 
     * @type {Date}
     * @memberof ParticipantDto
     */
    createdTime?: Date;
    /**
     * 
     * @type {UserDto}
     * @memberof ParticipantDto
     */
    createdBy?: UserDto;
    /**
     * 
     * @type {Date}
     * @memberof ParticipantDto
     */
    modifiedTime?: Date;
    /**
     * 
     * @type {UserDto}
     * @memberof ParticipantDto
     */
    modifiedBy?: UserDto;
}

/**
 * Check if a given object implements the ParticipantDto interface.
 */
export function instanceOfParticipantDto(value: object): value is ParticipantDto {
    return true;
}

export function ParticipantDtoFromJSON(json: any): ParticipantDto {
    return ParticipantDtoFromJSONTyped(json, false);
}

export function ParticipantDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParticipantDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'user': json['user'] == null ? undefined : UserDtoFromJSON(json['user']),
        'meetingId': json['meetingId'] == null ? undefined : json['meetingId'],
        'status': json['status'] == null ? undefined : json['status'],
        'createdTime': json['createdTime'] == null ? undefined : (new Date(json['createdTime'])),
        'createdBy': json['createdBy'] == null ? undefined : UserDtoFromJSON(json['createdBy']),
        'modifiedTime': json['modifiedTime'] == null ? undefined : (new Date(json['modifiedTime'])),
        'modifiedBy': json['modifiedBy'] == null ? undefined : UserDtoFromJSON(json['modifiedBy']),
    };
}

export function ParticipantDtoToJSON(json: any): ParticipantDto {
    return ParticipantDtoToJSONTyped(json, false);
}

export function ParticipantDtoToJSONTyped(value?: ParticipantDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user': UserDtoToJSON(value['user']),
        'meetingId': value['meetingId'],
        'status': value['status'],
        'createdTime': value['createdTime'] == null ? undefined : ((value['createdTime']).toISOString()),
        'createdBy': UserDtoToJSON(value['createdBy']),
        'modifiedTime': value['modifiedTime'] == null ? undefined : ((value['modifiedTime']).toISOString()),
        'modifiedBy': UserDtoToJSON(value['modifiedBy']),
    };
}

