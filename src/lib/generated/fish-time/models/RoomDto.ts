/* tslint:disable */
/* eslint-disable */
/**
 * OAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
    UserDtoToJSONTyped,
} from './UserDto';

/**
 * 
 * @export
 * @interface RoomDto
 */
export interface RoomDto {
    /**
     * 
     * @type {number}
     * @memberof RoomDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof RoomDto
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof RoomDto
     */
    capacity?: number;
    /**
     * 
     * @type {string}
     * @memberof RoomDto
     */
    address?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RoomDto
     */
    active?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof RoomDto
     */
    createdTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof RoomDto
     */
    modifiedTime?: Date;
    /**
     * 
     * @type {UserDto}
     * @memberof RoomDto
     */
    createdBy?: UserDto;
    /**
     * 
     * @type {UserDto}
     * @memberof RoomDto
     */
    modifiedBy?: UserDto;
}

/**
 * Check if a given object implements the RoomDto interface.
 */
export function instanceOfRoomDto(value: object): value is RoomDto {
    return true;
}

export function RoomDtoFromJSON(json: any): RoomDto {
    return RoomDtoFromJSONTyped(json, false);
}

export function RoomDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'capacity': json['capacity'] == null ? undefined : json['capacity'],
        'address': json['address'] == null ? undefined : json['address'],
        'active': json['active'] == null ? undefined : json['active'],
        'createdTime': json['createdTime'] == null ? undefined : (new Date(json['createdTime'])),
        'modifiedTime': json['modifiedTime'] == null ? undefined : (new Date(json['modifiedTime'])),
        'createdBy': json['createdBy'] == null ? undefined : UserDtoFromJSON(json['createdBy']),
        'modifiedBy': json['modifiedBy'] == null ? undefined : UserDtoFromJSON(json['modifiedBy']),
    };
}

export function RoomDtoToJSON(json: any): RoomDto {
    return RoomDtoToJSONTyped(json, false);
}

export function RoomDtoToJSONTyped(value?: RoomDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'capacity': value['capacity'],
        'address': value['address'],
        'active': value['active'],
        'createdTime': value['createdTime'] == null ? undefined : ((value['createdTime']).toISOString()),
        'modifiedTime': value['modifiedTime'] == null ? undefined : ((value['modifiedTime']).toISOString()),
        'createdBy': UserDtoToJSON(value['createdBy']),
        'modifiedBy': UserDtoToJSON(value['modifiedBy']),
    };
}

