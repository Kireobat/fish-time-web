/* tslint:disable */
/* eslint-disable */
/**
 * OAuth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoomDto } from './RoomDto';
import {
    RoomDtoFromJSON,
    RoomDtoFromJSONTyped,
    RoomDtoToJSON,
    RoomDtoToJSONTyped,
} from './RoomDto';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
    UserDtoToJSONTyped,
} from './UserDto';
import type { ParticipantDto } from './ParticipantDto';
import {
    ParticipantDtoFromJSON,
    ParticipantDtoFromJSONTyped,
    ParticipantDtoToJSON,
    ParticipantDtoToJSONTyped,
} from './ParticipantDto';

/**
 * 
 * @export
 * @interface MeetingDto
 */
export interface MeetingDto {
    /**
     * 
     * @type {number}
     * @memberof MeetingDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof MeetingDto
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof MeetingDto
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof MeetingDto
     */
    startTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MeetingDto
     */
    endTime?: Date;
    /**
     * 
     * @type {RoomDto}
     * @memberof MeetingDto
     */
    room?: RoomDto;
    /**
     * 
     * @type {Array<ParticipantDto>}
     * @memberof MeetingDto
     */
    participants?: Array<ParticipantDto>;
    /**
     * 
     * @type {Date}
     * @memberof MeetingDto
     */
    createdTime?: Date;
    /**
     * 
     * @type {UserDto}
     * @memberof MeetingDto
     */
    createdBy?: UserDto;
    /**
     * 
     * @type {Date}
     * @memberof MeetingDto
     */
    modifiedTime?: Date;
    /**
     * 
     * @type {UserDto}
     * @memberof MeetingDto
     */
    modifiedBy?: UserDto;
}

/**
 * Check if a given object implements the MeetingDto interface.
 */
export function instanceOfMeetingDto(value: object): value is MeetingDto {
    return true;
}

export function MeetingDtoFromJSON(json: any): MeetingDto {
    return MeetingDtoFromJSONTyped(json, false);
}

export function MeetingDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeetingDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'startTime': json['startTime'] == null ? undefined : (new Date(json['startTime'])),
        'endTime': json['endTime'] == null ? undefined : (new Date(json['endTime'])),
        'room': json['room'] == null ? undefined : RoomDtoFromJSON(json['room']),
        'participants': json['participants'] == null ? undefined : ((json['participants'] as Array<any>).map(ParticipantDtoFromJSON)),
        'createdTime': json['createdTime'] == null ? undefined : (new Date(json['createdTime'])),
        'createdBy': json['createdBy'] == null ? undefined : UserDtoFromJSON(json['createdBy']),
        'modifiedTime': json['modifiedTime'] == null ? undefined : (new Date(json['modifiedTime'])),
        'modifiedBy': json['modifiedBy'] == null ? undefined : UserDtoFromJSON(json['modifiedBy']),
    };
}

export function MeetingDtoToJSON(json: any): MeetingDto {
    return MeetingDtoToJSONTyped(json, false);
}

export function MeetingDtoToJSONTyped(value?: MeetingDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'startTime': value['startTime'] == null ? undefined : ((value['startTime']).toISOString()),
        'endTime': value['endTime'] == null ? undefined : ((value['endTime']).toISOString()),
        'room': RoomDtoToJSON(value['room']),
        'participants': value['participants'] == null ? undefined : ((value['participants'] as Array<any>).map(ParticipantDtoToJSON)),
        'createdTime': value['createdTime'] == null ? undefined : ((value['createdTime']).toISOString()),
        'createdBy': UserDtoToJSON(value['createdBy']),
        'modifiedTime': value['modifiedTime'] == null ? undefined : ((value['modifiedTime']).toISOString()),
        'modifiedBy': UserDtoToJSON(value['modifiedBy']),
    };
}

